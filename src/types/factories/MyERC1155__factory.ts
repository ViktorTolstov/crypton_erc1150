/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MyERC1155, MyERC1155Interface } from "../MyERC1155";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Minted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620018f4380380620018f4833981016040819052620000349162000070565b80620000408162000048565b5050620002a0565b6002620000568282620001d4565b5050565b634e487b7160e01b600052604160045260246000fd5b600060208083850312156200008457600080fd5b82516001600160401b03808211156200009c57600080fd5b818501915085601f830112620000b157600080fd5b815181811115620000c657620000c66200005a565b604051601f8201601f19908116603f01168101908382118183101715620000f157620000f16200005a565b8160405282815288868487010111156200010a57600080fd5b600093505b828410156200012e57848401860151818501870152928501926200010f565b600086848301015280965050505050505092915050565b600181811c908216806200015a57607f821691505b6020821081036200017b57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001cf57600081815260208120601f850160051c81016020861015620001aa5750805b601f850160051c820191505b81811015620001cb57828155600101620001b6565b5050505b505050565b81516001600160401b03811115620001f057620001f06200005a565b620002088162000201845462000145565b8462000181565b602080601f831160018114620002405760008415620002275750858301515b600019600386901b1c1916600185901b178555620001cb565b600085815260208120601f198616915b82811015620002715788860151825594840194600190910190840162000250565b5085821015620002905787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61164480620002b06000396000f3fe608060405234801561001057600080fd5b50600436106100a25760003560e01c80634e1273f411610076578063a22cb4651161005b578063a22cb46514610158578063e985e9c51461016b578063f242432a146101a757600080fd5b80634e1273f414610125578063a0712d681461014557600080fd5b8062fdd58e146100a757806301ffc9a7146100cd5780630e89341c146100f05780632eb2c2d614610110575b600080fd5b6100ba6100b5366004610f57565b6101ba565b6040519081526020015b60405180910390f35b6100e06100db366004610f9a565b610266565b60405190151581526020016100c4565b6101036100fe366004610fbe565b6102b6565b6040516100c4919061101d565b61012361011e36600461117c565b61034a565b005b610138610133366004611226565b6103dd565b6040516100c4919061132c565b610123610153366004610fbe565b61051b565b61012361016636600461133f565b61058e565b6100e061017936600461137b565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b6101236101b53660046113ae565b61059d565b60006001600160a01b03831661023d5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201527f616c6964206f776e65720000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b506000818152602081815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b03198216636cdb3d1360e11b148061029757506001600160e01b031982166303a24d0760e21b145b8061026057506301ffc9a760e01b6001600160e01b0319831614610260565b6060600280546102c590611413565b80601f01602080910402602001604051908101604052809291908181526020018280546102f190611413565b801561033e5780601f106103135761010080835404028352916020019161033e565b820191906000526020600020905b81548152906001019060200180831161032157829003601f168201915b50505050509050919050565b6001600160a01b03851633148061036657506103668533610179565b6103c95760405162461bcd60e51b815260206004820152602e60248201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60448201526d195c881bdc88185c1c1c9bdd995960921b6064820152608401610234565b6103d68585858585610629565b5050505050565b606081518351146104565760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d6174636800000000000000000000000000000000000000000000006064820152608401610234565b6000835167ffffffffffffffff81111561047257610472611030565b60405190808252806020026020018201604052801561049b578160200160208202803683370190505b50905060005b8451811015610513576104e68582815181106104bf576104bf61144d565b60200260200101518583815181106104d9576104d961144d565b60200260200101516101ba565b8282815181106104f8576104f861144d565b602090810291909101015261050c81611479565b90506104a1565b509392505050565b610529600380546001019055565b600061053460035490565b90506105513382846040518060200160405280600081525061089c565b60408051338152602081018390527f30385c845b448a36257a6a1716e6ad2e1bc2cbe333cde1e69fe849ad6511adfe910160405180910390a15050565b6105993383836109b0565b5050565b6001600160a01b0385163314806105b957506105b98533610179565b61061c5760405162461bcd60e51b815260206004820152602e60248201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60448201526d195c881bdc88185c1c1c9bdd995960921b6064820152608401610234565b6103d68585858585610aa4565b81518351146106a05760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060448201527f6d69736d617463680000000000000000000000000000000000000000000000006064820152608401610234565b6001600160a01b0384166107045760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608401610234565b3360005b845181101561082e5760008582815181106107255761072561144d565b6020026020010151905060008583815181106107435761074361144d565b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156107d65760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608401610234565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290610813908490611492565b925050819055505050508061082790611479565b9050610708565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb878760405161087e9291906114a5565b60405180910390a4610894818787878787610c4f565b505050505050565b6001600160a01b0384166108fc5760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608401610234565b33600061090885610df4565b9050600061091585610df4565b90506000868152602081815260408083206001600160a01b038b16845290915281208054879290610947908490611492565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46109a783600089898989610e3f565b50505050505050565b816001600160a01b0316836001600160a01b031603610a375760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c6600000000000000000000000000000000000000000000006064820152608401610234565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b038416610b085760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608401610234565b336000610b1485610df4565b90506000610b2185610df4565b90506000868152602081815260408083206001600160a01b038c16845290915290205485811015610ba75760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608401610234565b6000878152602081815260408083206001600160a01b038d8116855292528083208985039055908a16825281208054889290610be4908490611492565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610c44848a8a8a8a8a610e3f565b505050505050505050565b6001600160a01b0384163b156108945760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610c9390899089908890889088906004016114d3565b6020604051808303816000875af1925050508015610cce575060408051601f3d908101601f19168201909252610ccb91810190611531565b60015b610d8357610cda61154e565b806308c379a003610d135750610cee61156a565b80610cf95750610d15565b8060405162461bcd60e51b8152600401610234919061101d565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e2d4552433131353560448201527f526563656976657220696d706c656d656e7465720000000000000000000000006064820152608401610234565b6001600160e01b0319811663bc197c8160e01b146109a75760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b6064820152608401610234565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610e2e57610e2e61144d565b602090810291909101015292915050565b6001600160a01b0384163b156108945760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610e8390899089908890889088906004016115f4565b6020604051808303816000875af1925050508015610ebe575060408051601f3d908101601f19168201909252610ebb91810190611531565b60015b610eca57610cda61154e565b6001600160e01b0319811663f23a6e6160e01b146109a75760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b6064820152608401610234565b80356001600160a01b0381168114610f5257600080fd5b919050565b60008060408385031215610f6a57600080fd5b610f7383610f3b565b946020939093013593505050565b6001600160e01b031981168114610f9757600080fd5b50565b600060208284031215610fac57600080fd5b8135610fb781610f81565b9392505050565b600060208284031215610fd057600080fd5b5035919050565b6000815180845260005b81811015610ffd57602081850181015186830182015201610fe1565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610fb76020830184610fd7565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff8111828210171561106c5761106c611030565b6040525050565b600067ffffffffffffffff82111561108d5761108d611030565b5060051b60200190565b600082601f8301126110a857600080fd5b813560206110b582611073565b6040516110c28282611046565b83815260059390931b85018201928281019150868411156110e257600080fd5b8286015b848110156110fd57803583529183019183016110e6565b509695505050505050565b600082601f83011261111957600080fd5b813567ffffffffffffffff81111561113357611133611030565b60405161114a601f8301601f191660200182611046565b81815284602083860101111561115f57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a0868803121561119457600080fd5b61119d86610f3b565b94506111ab60208701610f3b565b9350604086013567ffffffffffffffff808211156111c857600080fd5b6111d489838a01611097565b945060608801359150808211156111ea57600080fd5b6111f689838a01611097565b9350608088013591508082111561120c57600080fd5b5061121988828901611108565b9150509295509295909350565b6000806040838503121561123957600080fd5b823567ffffffffffffffff8082111561125157600080fd5b818501915085601f83011261126557600080fd5b8135602061127282611073565b60405161127f8282611046565b83815260059390931b850182019282810191508984111561129f57600080fd5b948201945b838610156112c4576112b586610f3b565b825294820194908201906112a4565b965050860135925050808211156112da57600080fd5b506112e785828601611097565b9150509250929050565b600081518084526020808501945080840160005b8381101561132157815187529582019590820190600101611305565b509495945050505050565b602081526000610fb760208301846112f1565b6000806040838503121561135257600080fd5b61135b83610f3b565b91506020830135801515811461137057600080fd5b809150509250929050565b6000806040838503121561138e57600080fd5b61139783610f3b565b91506113a560208401610f3b565b90509250929050565b600080600080600060a086880312156113c657600080fd5b6113cf86610f3b565b94506113dd60208701610f3b565b93506040860135925060608601359150608086013567ffffffffffffffff81111561140757600080fd5b61121988828901611108565b600181811c9082168061142757607f821691505b60208210810361144757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161148b5761148b611463565b5060010190565b8082018082111561026057610260611463565b6040815260006114b860408301856112f1565b82810360208401526114ca81856112f1565b95945050505050565b60006001600160a01b03808816835280871660208401525060a060408301526114ff60a08301866112f1565b828103606084015261151181866112f1565b905082810360808401526115258185610fd7565b98975050505050505050565b60006020828403121561154357600080fd5b8151610fb781610f81565b600060033d11156115675760046000803e5060005160e01c5b90565b600060443d10156115785790565b6040516003193d81016004833e81513d67ffffffffffffffff81602484011181841117156115a857505050505090565b82850191508151818111156115c05750505050505090565b843d87010160208285010111156115da5750505050505090565b6115e960208286010187611046565b509095945050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a0608083015261162c60a0830184610fd7565b97965050505050505056fea164736f6c6343000813000a";

export class MyERC1155__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    uri: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MyERC1155> {
    return super.deploy(uri, overrides || {}) as Promise<MyERC1155>;
  }
  getDeployTransaction(
    uri: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(uri, overrides || {});
  }
  attach(address: string): MyERC1155 {
    return super.attach(address) as MyERC1155;
  }
  connect(signer: Signer): MyERC1155__factory {
    return super.connect(signer) as MyERC1155__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyERC1155Interface {
    return new utils.Interface(_abi) as MyERC1155Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MyERC1155 {
    return new Contract(address, _abi, signerOrProvider) as MyERC1155;
  }
}
